name: Create Files in New Repository

on:
  push:
    branches:
      - main

jobs:

  process_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        with:
          token: ${{ secrets.PAT_TOKEN }}
        uses: actions/checkout@v3

      - name: Get README.md Contents
        id: get_readme
        run: |
          readme_contents=$(cat << 'EOF'
          $(cat README.md)
          EOF
          )
          echo "readme_contents=$readme_contents" >> $GITHUB_OUTPUT
          
      - name: Get API Response
        id: get_api_response
        run: |
          api_response=$(curl "https://ssyptd4iv1v0gja5.us-east-1.aws.endpoints.huggingface.cloud" \
            -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg inputs "${{ steps.get_readme.outputs.readme_contents }}" '{inputs: $inputs, parameters: {top_k: 10, max_new_tokens: 150, do_sample: true, return_full_text: false}}')")
          echo "api_response=$(echo "$api_response" | jq '.[]?.generated_text')" >> $GITHUB_OUTPUT

          
      - name: Create files
        run: |
          raw_files=$(echo "${{ steps.get_api_response.outputs.api_response }}")
          if [[ $raw_files == *"</answer>"* ]]; then
            end_index=$((${#raw_files} - ${#${raw_files#*</answer>}} - 9))
            files=${raw_files:0:$end_index}
          else
            files=$raw_files
          fi
          total_files=$(echo "$files" | tr ',' '\n' | wc -l)
          counter=1
      
          for file in $(echo "$files" | tr ',' '\n'); do
            if [ $counter -eq $total_files ]; then
              if [[ $file != *"."* ]]; then
                echo "Ignoring incomplete file name: $file"
                continue
              fi
            fi
      
            if [[ $file == .vscode* || $file == .git* || $file == README.md ]]; then
              echo "Ignoring $file"
              continue
            fi
      
            dir=$(dirname "$file")
            if [ "$dir" != "." ]; then
              mkdir -p "$dir" || continue
            fi
      
            echo "Creating file: $file"
            echo "Content for $file" > "$file" || continue
      
            counter=$((counter+1))
          done


      - name: Initialize Git and add files
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
      - name: Commit and push changes
        continue-on-error: true
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Automated file creation"
          git push
